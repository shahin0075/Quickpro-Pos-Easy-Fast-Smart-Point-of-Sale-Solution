@page "/user"
@inject UserService userService
@inject MudBlazor.ISnackbar Snackbar
@inject IJSRuntime JsRuntime
<PageTitle>User</PageTitle>
<div class="container mt-4">
    <!-- Header Section -->
    <div class="row align-items-center mb-3">
        <div class="col">
            <h4>User</h4>
        </div>
        <div class="col text-end">
            <a class="btn btn-primary" href="/user/add">
                <i class="fas fa-plus me-2"></i> Create
            </a>
        </div>
    </div>

    <!-- Table Section -->
    <div class="row">
        <div class="col">
            <div class="table-responsive">
                <MudTable Items="@listUser" Dense="@dense" Hover="@hover">

                    <HeaderContent>
                        <MudTh>IMAGE</MudTh>
                        <MudTh>NAME</MudTh>
                        <MudTh>EMAIL</MudTh>
                        <MudTh>ROLE</MudTh>
                        <MudTh></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Image" Style="width:160px;">
                            @if (string.IsNullOrEmpty(context.Image))
                            {
                                <img src="/img/noimage.png" height="40" width="40" />
                            }
                            else
                            {
                                <img src="@context.Image" width="40" height="40" />
                            }
                        </MudTd>
                        <MudTd DataLabel="UserName" Style="width:280px;">@context.Username</MudTd>
                        <MudTd DataLabel="Email" Style="width:280px;">@context.Email</MudTd>
                        <MudTd DataLabel="Role" Style="width:100px;">@context.Role</MudTd>

                        <MudTd DataLabel="">
                            <div class="d-flex justify-content-start">
                                <a class="btn btn-warning btn-sm me-2" href="/user/edit/@context.UserId">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button class="btn btn-danger btn-sm" @onclick="() => Delete(context.UserId)">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager />
                    </PagerContent>
                </MudTable>

            </div>
        </div>
    </div>

</div>

@code {
    private bool dense = true;
    private bool hover = true;
    private List<UserMaster> listUser = new();
    private bool IsModalVisible = false;
    private string ModalTitle = "Create User";
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            listUser = await userService.GetAllUserMastersAsync();
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading data: {ex.Message}", Severity.Error);
        }
    }
    private async Task Delete(int id)
    {
        try
        {
            // Show a confirmation dialog to the user
            bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this user?");

            if (!confirmed)
            {
                return; // User canceled the action
            }

            // Attempt to delete the User
            bool isDeleted = await userService.DeleteUserMasterAsync(id);

            if (isDeleted == true)
            {
                Snackbar.Add("User deleted successfully.", Severity.Success);
                await LoadData(); // Reload the data after successful deletion
            }
            else
            {
                Snackbar.Add("User cannot be deleted as it is being used.", Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"An error occurred while deleting the user: {ex.Message}", Severity.Error);
        }
    }
}
