@page "/purchase"
@inject PurchaseInvoiceService purchaseinvoiceService
@inject AccountLedgerService accountledgerService
@inject MudBlazor.ISnackbar Snackbar
@inject IJSRuntime JsRuntime

<div class="container mt-4">
    <!-- Header Section -->
    <div class="row align-items-center mb-3">
        <div class="col">
            <h4>Purchase Invoice</h4>
        </div>
        <div class="col text-end">
            <a class="btn btn-primary" href="/purchase/add">
                <i class="fas fa-plus me-2"></i> Create
            </a>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <!-- From Date -->
                        <div class="col-lg-2 col-sm-6 col-12">
                            <div class="form-group">
                                From Date
                                <InputDate class="form-control" @bind-Value="fromDate" />
                            </div>
                        </div>

                        <!-- To Date -->
                        <div class="col-lg-2 col-sm-6 col-12">
                            <div class="form-group">
                                To Date
                                <InputDate class="form-control" @bind-Value="endDate" />
                            </div>
                        </div>

                        <!-- Supplier Dropdown -->
                        <div class="col-lg-4 col-sm-6 col-12">
                            <div class="form-group">
                                Supplier
                                <select class="form-select" @bind="ledgerId">
                                    <option value="0">Choose</option>
                                    @if (listAccountLedger != null)
                                    {
                                        @foreach (var supplier in listAccountLedger)
                                        {
                                            <option value="@supplier.LedgerId">@supplier.LedgerName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>

                        <!-- Status Dropdown -->
                        <div class="col-lg-2 col-sm-6 col-12">
                            <div class="form-group">
                                Status
                                <select class="form-select" @bind="strStatus">
                                    <option value="All">All</option>
                                    <option value="Pending">Pending</option>
                                    <option value="PartialPaid">Partial Paid</option>
                                    <option value="Paid">Paid</option>
                                </select>
                            </div>
                        </div>

                        <!-- Search Button -->
                        <div class="col-lg-2 col-sm-6 col-12">
                            <div class="form-group" style="margin-top: 20px;">
                                <button class="btn btn-primary" @onclick="LoadData">
                                    <i class="fas fa-search"></i> Search
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Table Section -->
                <MudTable Items="listPurchaseInvoice" Dense="dense" Hover="hover">
                    <HeaderContent>
                        <MudTh>DATE</MudTh>
                        <MudTh>INVOICE NO</MudTh>
                        <MudTh>SUPPLIER NAME</MudTh>
                        <MudTh>AMOUNT</MudTh>
                        <MudTh>BALANCE DUE</MudTh>
                        <MudTh>STATUS</MudTh>
                        <MudTh></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Date">@context.Date</MudTd>
                        <MudTd DataLabel="VoucherNo">@context.VoucherNo</MudTd>
                        <MudTd DataLabel="LedgerName">@context.LedgerName</MudTd>
                        <MudTd DataLabel="GrandTotal">@context.GrandTotal</MudTd>
                        <MudTd DataLabel="BalanceDue">@context.BalanceDue</MudTd>
                        <MudTd DataLabel="Status">@context.Status</MudTd>
                        <MudTd DataLabel="">
                            <!-- Dropdown Actions -->
                            <button class="btn btn-sm btn-light dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fas fa-bars me-1"></i>
                            </button>
                            <div class="dropdown-menu">
                                <a class="dropdown-item" href="/purchase/details/@context.PurchaseMasterId">
                                    <i class="fas fa-eye"></i> View
                                </a>
                                <a class="dropdown-item" href="/purchase/@context.PurchaseMasterId">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                @if (context.Status == "Pending" || context.Status == "PartialPaid")
                                {
                                    <a class="dropdown-item" href="/payment-out/@context.PurchaseMasterId">
                                        <i class="fas fa-money-bill"></i> Generate Payment
                                    </a>
                                }
                                <a class="dropdown-item" href="/purchase-return/add/@context.PurchaseMasterId">
                                    <i class="fa fa-angle-double-left"></i> Purchase Return
                                </a>
                                <a class="dropdown-item text-danger" @onclick="() => Delete(context)">
                                    <i class="fas fa-trash"></i> Delete
                                </a>
                            </div>
                        </MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager />
                    </PagerContent>
                </MudTable>
            </div>
        </div>
    </div>
</div>

@code {
    private bool dense = true;
    private bool hover = true;
    private List<PurchaseMasterView> listPurchaseInvoice = new();
    private List<AccountLedgerView> listAccountLedger;
    private DateTime fromDate { get; set; }
    private DateTime endDate { get; set; } 
    private int ledgerId = 0;
    private string strStatus = "All";

    protected override async Task OnInitializedAsync()
    {
        listAccountLedger = await accountledgerService.GetAllAccountLedgersByIdAsync(22);
        fromDate = DateTime.UtcNow.AddDays(-7);
        endDate = DateTime.UtcNow;
        await LoadData();
    }

    private async Task LoadData()
    {
        try
        {
            listPurchaseInvoice = await purchaseinvoiceService.PurchaseInvoiceSearchAsync(fromDate, endDate, ledgerId, strStatus);
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error loading data: {ex.Message}", Severity.Error);
        }
    }

    private async Task Delete(PurchaseMasterView view)
    {
        try
        {
            // Show a confirmation dialog
            bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this purchase invoice?");
            if (!confirmed) return;

            // Attempt to delete the purchase
            bool isDeleted = await purchaseinvoiceService.DeletePurchaseInvoiceAsync(view);

            if (isDeleted)
            {
                Snackbar.Add("Purchase invoice deleted successfully.", Severity.Success);
                await LoadData();
            }
            else
            {
                Snackbar.Add("This purchase invoice cannot be deleted as it is being used.", Severity.Warning);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"An error occurred while deleting the purchase invoice: {ex.Message}", Severity.Error);
        }
    }
}
